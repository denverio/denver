#!/usr/bin/env sh

projectRootPath=$(cd "$(dirname "$0")/../.."; pwd)
# used in .env file
realUser=${SUDO_USER:-$USER}
dockerUser=${DOCKER_ID_USER:-$realUser}
network=${DE_NETWORK_NAME:-$DE_CA_NETWORK_NAME}
runArgs="${DE_CA_RUN_ARGS} ${DE_RUN_ARGS}"

denver_ca_printenv() {
  printenv | grep -E '^DE_CA_'
  echo
}

denver_ca_build() {
  local argsMsg="without args"
  [ $# -ne 0 ] && argsMsg="with args $@"

  echo "Building image \
\"${DE_CA_SCOPE}/${DE_CA_NAME}\" \
${argsMsg}..."
  echo

  sudo docker build \
    -t ${DE_CA_SCOPE}/${DE_CA_NAME} \
    "$@" \
    $projectRootPath

  return 0
}

denver_ca_remove() {
  echo "Removing image \
\"${DE_CA_SCOPE}/${DE_CA_NAME}\"..."
  echo

  sudo docker image rm \
    -f ${DE_CA_SCOPE}/${DE_CA_NAME}

  return 0
}

denver_ca_create_network() {
  sudo docker network create \
    --driver bridge \
    ${DE_CA_NETWORK_NAME} 2> /dev/null && \
    echo "Created network \"${DE_CA_NETWORK_NAME}\"! Using it..." || \
    echo "Using network \"${DE_CA_NETWORK_NAME}\"..."

  echo
}

denver_ca_run() {
  local cmd=${1:-$DE_CA_DEFAULT_COMMAND}
  [ $# -ne 0 ] && shift

  local argsMsg="without args"
  [ $# -ne 0 ] && argsMsg="with args $@"

  echo "Running container \
\"${DE_CA_SCOPE}_${DE_CA_NAME}\""
  echo "  based on image \
\"${DE_CA_SCOPE}/${DE_CA_NAME}\""
  echo "  with command \"${cmd}\" ${argsMsg}..."
  echo

  denver_ca_create_network

  sudo docker run \
    -it \
    --rm \
    --name "${DE_CA_SCOPE}_${DE_CA_NAME}" \
    --network ${DE_CA_NETWORK_NAME} \
    -h "denver-${DE_CA_NAME}" \
    -p ${DE_CA_SSH_PORT}:22 \
    -v ${DE_CA_VOLUME_APP}:/app \
    -v ${DE_CA_VOLUME_WORKSPACE}:/workspace \
    ${DE_CA_RUN_ARGS} \
    ${DE_CA_SCOPE}/${DE_CA_NAME} \
    ${cmd} \
    "$@"

  return 0
}

denver_ca_stop() {
  echo "Stopping container \
\""${DE_CA_SCOPE}_${DE_CA_NAME}"\"..."
  echo

  sudo docker container stop \
    "${DE_CA_SCOPE}_${DE_CA_NAME}"

  return 0
}

denver_ca_main() {
  local runner=${1:-"run"}

  if [ -s "$projectRootPath/.env" ] 
  then
    eval $(env "$(cat "$projectRootPath/.env"; env)" | grep -E '^(DE_|DOCKER_)' | sed 's/^\(.\+=\)\("\?\)\([^"$]\+\)\("\?\)$/export \1"\3"/')
  fi

  [ "$runner" != 'printenv' ] &&
    denver_ca_printenv

  {
    [ $# -ne 0 ] && shift
    denver_ca_${runner} "$@" 2>/dev/null
  } || denver_ca_run $runner "$@"

  return 0
}
denver_ca_main "$@"

